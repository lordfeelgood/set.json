{
  "disjunctVariables": [],
  "expression": [
    "|-",
    "PProd",
    "(",
    "A",
    ",",
    "B",
    ")",
    "C_",
    "(",
    "(",
    "_V",
    "X.",
    "_V",
    ")",
    "X.",
    "(",
    "_V",
    "X.",
    "_V",
    ")",
    ")"
  ],
  "label": "pprodss4v",
  "mandatoryHypotheses": [
    "cA",
    "cB"
  ],
  "proofSteps": [
    "cA",
    "cB",
    "cpprod",
    "",
    "cvv",
    "cvv",
    "cxp",
    "",
    "cxp",
    "",
    "wss",
    "",
    "cv",
    "",
    "cv",
    "",
    "cop",
    "",
    "wcel",
    "",
    "wcel",
    "",
    "wi",
    "",
    "wal",
    "",
    "wrel",
    "wal",
    "wb",
    "cA",
    "cB",
    "relpprod",
    "ssrel",
    "ax-mp",
    "cv",
    "",
    "cv",
    "",
    "cop",
    "",
    "wceq",
    "",
    "cv",
    "",
    "cv",
    "",
    "cop",
    "",
    "wceq",
    "",
    "cA",
    "wbr",
    "cB",
    "wbr",
    "wa",
    "",
    "w3a",
    "",
    "wex",
    "wex",
    "",
    "wex",
    "wex",
    "",
    "wbr",
    "cA",
    "cB",
    "brpprod",
    "df-br",
    "bitr3i",
    "wa",
    "cop",
    "",
    "opeq12",
    "wcel",
    "wcel",
    "",
    "wcel",
    "",
    "cvv",
    "wcel",
    "cvv",
    "wcel",
    "vex",
    "vex",
    "cvv",
    "cvv",
    "opelxp",
    "mpbir2an",
    "cvv",
    "wcel",
    "cvv",
    "wcel",
    "vex",
    "vex",
    "cvv",
    "cvv",
    "opelxp",
    "mpbir2an",
    "opelxp",
    "mpbir2an",
    "syl6eqel",
    "3adant3",
    "exlimivv",
    "exlimivv",
    "sylbir",
    "ax-gen",
    "mpgbir"
  ]
}