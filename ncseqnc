{
  "disjunctVariables": [],
  "expression": [
    "|-",
    "(",
    "A",
    "e.",
    "NC",
    "->",
    "(",
    "A",
    "=",
    "Nc",
    "X",
    "<->",
    "X",
    "e.",
    "A",
    ")",
    ")"
  ],
  "label": "ncseqnc",
  "mandatoryHypotheses": [
    "cA",
    "cX"
  ],
  "proofSteps": [
    "cA",
    "cncs",
    "wcel",
    "cA",
    "cv",
    "",
    "cnc",
    "",
    "wceq",
    "",
    "wex",
    "cA",
    "cX",
    "cnc",
    "",
    "wceq",
    "",
    "cX",
    "cA",
    "wcel",
    "",
    "wb",
    "",
    "cA",
    "elncs",
    "wceq",
    "",
    "cX",
    "wcel",
    "",
    "wb",
    "wceq",
    "",
    "cX",
    "cen",
    "wbr",
    "",
    "cX",
    "cvv",
    "wcel",
    "",
    "cX",
    "cen",
    "cec",
    "",
    "wcel",
    "wcel",
    "wcel",
    "vex",
    "",
    "ncid",
    "eleq2",
    "mpbiri",
    "cX",
    "df-nc",
    "",
    "syl6eleq",
    "cX",
    "cen",
    "ecexr",
    "syl",
    "cvv",
    "wcel",
    "",
    "cX",
    "cen",
    "brex",
    "simpld",
    "cen",
    "cec",
    "",
    "wceq",
    "cX",
    "cen",
    "cvv",
    "cvv",
    "cen",
    "cvv",
    "cer",
    "wbr",
    "ener",
    "a1i",
    "cen",
    "cdm",
    "cvv",
    "wceq",
    "dmen",
    "a1i",
    "id",
    "a1i",
    "erth",
    "df-nc",
    "eqeq12i",
    "syl6rbbr",
    "pm5.21nii",
    "eqcom",
    "cX",
    "elnc",
    "3bitr4i",
    "a1i",
    "cA",
    "eqeq1",
    "cA",
    "cX",
    "eleq2",
    "3bitr4d",
    "exlimiv",
    "sylbi"
  ]
}